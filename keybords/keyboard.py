from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from config import Config


class CallbackData:
    """–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è callback_data."""
    RANDOM = "random"
    START = "start"
    BREAK = "break"
    TALK_PREFIX = "talk_"
    QUIZ_PREFIX = "quiz_"
    QUIZ_MORE = "quiz_more"
    CHANGE_TOPIC = "change_topic"
    END_QUIZ = "end_quiz"
    LANG_PREFIX = "lang_"
    CHANGE_LANG = "change_lang"
    MAIN_MENU = "main_menu"


class Keyboards:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∏ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞.
    –í—Å–µ –º–µ—Ç–æ–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä, –≥–æ—Ç–æ–≤—ã–µ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
    """

    @staticmethod
    def main_menu() -> ReplyKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.

        Returns:
            ReplyKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
        """
        builder = ReplyKeyboardBuilder()
        builder.button(text="üé≤ /random - –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç")
        builder.button(text="ü§ñ /gpt - ChatGPT –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        builder.button(text="üë§ /talk - –î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é")
        builder.button(text="üß© /quiz - –ö–≤–∏–∑")
        builder.button(text="üåê /translate - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫")
        builder.button(text="üéôÔ∏è /voice - –ì–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç")
        builder.adjust(2)
        return builder.as_markup(resize_keyboard=True)

    @staticmethod
    def get_random_fact_keyboard() -> InlineKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–∂–∏–º–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ï—â–µ —Ñ–∞–∫—Ç" –∏ "–ó–∞–∫–æ–Ω—á–∏—Ç—å"
        """
        builder = InlineKeyboardBuilder()
        builder.button(text="üîÅ –•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç", callback_data=CallbackData.RANDOM)
        builder.button(text="üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data=CallbackData.START)
        return builder.as_markup()

    @staticmethod
    def get_gpt_exit_keyboard() -> InlineKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ GPT.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫–æ–Ω—á–∏—Ç—å"
        """
        builder = InlineKeyboardBuilder()
        builder.button(text="üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data=CallbackData.BREAK)
        return builder.as_markup()

    @staticmethod
    def get_personalities_keyboard() -> InlineKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –ª–∏—á–Ω–æ—Å—Ç–µ–π –¥–ª—è –¥–∏–∞–ª–æ–≥–∞.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ª–∏—á–Ω–æ—Å—Ç–µ–π

        Raises:
            ValueError: –ï—Å–ª–∏ –≤ Config.PERSONS –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
        """
        if not Config.PERSONS:
            raise ValueError("No personalities configured in Config.PERSONS")

        builder = InlineKeyboardBuilder()
        for person_id, person_name in Config.PERSONS.items():
            builder.button(
                text=person_name.upper(),
                callback_data=f"{CallbackData.TALK_PREFIX}{person_id}"
            )
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_talk_exit_keyboard():
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–∏–∞–ª–æ–≥–∞.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫–æ–Ω—á–∏—Ç—å"
        """
        builder = InlineKeyboardBuilder()
        builder.button(text="üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data=CallbackData.START)
        return builder.as_markup()

    @staticmethod
    def get_quiz_topics_keyboard() -> InlineKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Ç–µ–º –¥–ª—è –∫–≤–∏–∑–∞.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–µ–º
        """
        builder = InlineKeyboardBuilder()
        builder.button(text="üêç –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (Python)", callback_data=f"{CallbackData.QUIZ_PREFIX}prog")
        builder.button(text="‚à´ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data=f"{CallbackData.QUIZ_PREFIX}math")
        builder.button(text="üß¨ –ë–∏–æ–ª–æ–≥–∏—è", callback_data=f"{CallbackData.QUIZ_PREFIX}biology")
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_quiz_control_keyboard() -> InlineKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–∏–∑–æ–º –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–∏–∑–æ–º
        """
        builder = InlineKeyboardBuilder()
        builder.button(text="üîÑ –ï—â—ë –≤–æ–ø—Ä–æ—Å", callback_data=CallbackData.QUIZ_MORE)
        builder.button(text="üîÄ –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É", callback_data=CallbackData.CHANGE_TOPIC)
        builder.button(text="üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data=CallbackData.END_QUIZ)
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_languages_keyboard() -> InlineKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —è–∑—ã–∫–æ–≤

        Raises:
            ValueError: –ï—Å–ª–∏ –≤ Config.LANGUAGES –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
        """
        if not Config.LANGUAGES:
            raise ValueError("No languages configured in Config.LANGUAGES")

        builder = InlineKeyboardBuilder()
        for lang_name, lang_code in Config.LANGUAGES.items():
            builder.button(
                text=lang_name,
                callback_data=f"{CallbackData.LANG_PREFIX}{lang_code}"
            )
        builder.adjust(2)
        return builder.as_markup()

    @staticmethod
    def get_translator_control_keyboard() -> InlineKeyboardBuilder:
        """
        –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º.

        Returns:
            InlineKeyboardBuilder: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        """
        builder = InlineKeyboardBuilder()
        builder.button(text="üîÄ –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", callback_data=CallbackData.CHANGE_LANG)
        builder.button(text="üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data=CallbackData.MAIN_MENU)
        return builder.as_markup()